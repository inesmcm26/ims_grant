Logistic Regression 1: {'C': 1.0, 'class_weight': {1: 3.3640836408364083, 2: 2.52539242843952, 3: 0.4335076874306546}, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'multinomial', 'n_jobs': None, 'penalty': 'l2', 'random_state': 0, 'solver': 'lbfgs', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
Logistic Regression 2: {'C': 1.0, 'class_weight': {1: 3.3640836408364083, 2: 2.52539242843952, 3: 0.4335076874306546}, 'dual': False, 'fit_intercept': True, 'intercept_scaling': 1, 'l1_ratio': None, 'max_iter': 100, 'multi_class': 'multinomial', 'n_jobs': None, 'penalty': 'l2', 'random_state': 0, 'solver': 'sag', 'tol': 0.0001, 'verbose': 0, 'warm_start': False}
Decision Tree 1: {'ccp_alpha': 0.0, 'class_weight': {1: 3.3640836408364083, 2: 2.52539242843952, 3: 0.4335076874306546}, 'criterion': 'entropy', 'max_depth': 10, 'max_features': 'log2', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 5, 'min_weight_fraction_leaf': 0.0, 'random_state': 0, 'splitter': 'best'}
Random Forest 1: {'bootstrap': False, 'ccp_alpha': 0.0, 'class_weight': {1: 3.3640836408364083, 2: 2.52539242843952, 3: 0.4335076874306546}, 'criterion': 'gini', 'max_depth': None, 'max_features': 0.7, 'max_leaf_nodes': None, 'max_samples': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 5, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 100, 'n_jobs': None, 'oob_score': False, 'random_state': 0, 'verbose': 0, 'warm_start': False}
Gradient Boosting 1: {'ccp_alpha': 0.0, 'criterion': 'friedman_mse', 'init': None, 'learning_rate': 0.001, 'loss': 'log_loss', 'max_depth': 1, 'max_features': 'sqrt', 'max_leaf_nodes': None, 'min_impurity_decrease': 0.0, 'min_samples_leaf': 1, 'min_samples_split': 15, 'min_weight_fraction_leaf': 0.0, 'n_estimators': 50, 'n_iter_no_change': None, 'random_state': 0, 'subsample': 0.5, 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': 0, 'warm_start': False}
AdaBoost 1: {'algorithm': 'SAMME.R', 'base_estimator': 'deprecated', 'estimator': None, 'learning_rate': 1, 'n_estimators': 200, 'random_state': 0}
SVC 1: {'C': 100.0, 'break_ties': False, 'cache_size': 200, 'class_weight': {1: 3.3640836408364083, 2: 2.52539242843952, 3: 0.4335076874306546}, 'coef0': 0.0, 'decision_function_shape': 'ovo', 'degree': 3, 'gamma': 100, 'kernel': 'linear', 'max_iter': -1, 'probability': False, 'random_state': 0, 'shrinking': True, 'tol': 0.001, 'verbose': False}
KNN 1: {'algorithm': 'auto', 'leaf_size': 30, 'metric': 'euclidean', 'metric_params': None, 'n_jobs': None, 'n_neighbors': 3, 'p': 2, 'weights': 'distance'}
MLP 1: {'activation': 'relu', 'alpha': 0.01, 'batch_size': 32, 'beta_1': 0.9, 'beta_2': 0.999, 'early_stopping': False, 'epsilon': 1e-08, 'hidden_layer_sizes': (10,), 'learning_rate': 'constant', 'learning_rate_init': 0.001, 'max_fun': 15000, 'max_iter': 200, 'momentum': 0.9, 'n_iter_no_change': 10, 'nesterovs_momentum': True, 'power_t': 0.5, 'random_state': 0, 'shuffle': True, 'solver': 'adam', 'tol': 0.0001, 'validation_fraction': 0.1, 'verbose': True, 'warm_start': False}
Best Pipeline(steps=[('zerocount', ZeroCount()),
                ('polynomialfeatures', PolynomialFeatures(include_bias=False)),
                ('gaussiannb', GaussianNB())]) model
